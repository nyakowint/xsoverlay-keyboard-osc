name: Build & Release

permissions:
  contents: write

concurrency:
  group: "build"
  cancel-in-progress: true

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**/*.md'
      - '**/*.js'
      - '**/*.ps1'
  workflow_dispatch:
jobs:
  build:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Checkout XSO assemblies
        uses: actions/checkout@v4
        with:
          repository: ${{ secrets.xsoRepo }}
          token: ${{ secrets.repoToken }}
          path: refs

      - name: Setup .NET
        uses: actions/setup-dotnet@v3.2.0
        with:
          dotnet-version: '9.0.x'

      - name: Restore & add BepInEx feed
        shell: pwsh
        run: |
          dotnet nuget add source https://nuget.bepinex.dev/v3/index.json --name BepInEx
          dotnet restore

      - name: Build (Release)
        run: dotnet build -c Release --no-restore

      - name: Read version
        id: version
        shell: pwsh
        run: |
          if (-Not (Test-Path VERSION)) { Write-Error "VERSION file not found" }
          $v = (Get-Content VERSION -Raw).Trim()
          if (-not $v) { Write-Error "VERSION file is empty" }
          "version=$v" | Out-File -FilePath $env:GITHUB_OUTPUT -Append -Encoding utf8

      - name: Create Release
        shell: pwsh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          $version = "${{ steps.version.outputs.version }}"
          $short = "${{ github.sha }}".Substring(0,7)
          $tag = "$version+$short"
          $dll = 'builds/Release/net472/KeyboardOSC.dll'
          if (-not (Test-Path $dll)) { Write-Error "Artifact missing: $dll" }

          if (Test-Path CHANGELOG.md) { $notes = Get-Content CHANGELOG.md -Raw } else { $notes = 'Automated build' }

          gh release create $tag $dll --title "KeyboardOSC $tag" --prerelease --notes-file CHANGELOG.md || Write-Error 'Release creation failed'
